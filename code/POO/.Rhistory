grafico <- grafico.PRP_algorithms(data_obc, prp_algorithm, time, type_experiment, type_experiment.labs)
ggsave("grafico.PRP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
source("Scripts/funciones.R")
grafico <- grafico.OBP_algorithms(data_obc, type_experiment.labs)
ggsave("grafico.OBP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
source("Scripts/funciones.R")
grafico <- grafico.OBP_algorithms(data_obc, type_experiment.labs)
ggsave("grafico.OBP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.PRP_algorithms(data_obc, type_experiment.labs)
ggsave("grafico.PRP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.OBP_densidad(data_obc)
ggsave("grafico.OBP_densidad.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.OBP_algorithms(data_r_ls, type_experiment.labs)
ggsave("grafico.R_LS_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.PRP_algorithms(data_r_ls, type_experiment.labs)
ggsave("grafico.R_LS_PRP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.OBP_densidad(data_r_ls)
ggsave("grafico.R_LS_densidad.png", grafico, units="in", width=10, height=5, dpi=1200)
source("Scripts/funciones.R")
grafico <- grafico.OBP_algorithms(data_obc, obp_algorithm, time, type_experiment, type_experiment.labs)
grafico <- grafico.OBP_algorithms(data_obc, data_obc$obp_algorithm, data_obc$time, data_obc$type_experiment, type_experiment.labs)
source("Scripts/funciones.R")
grafico <- grafico.OBP_algorithms(data_obc, data_obc$obp_algorithm, data_obc$time, data_obc$type_experiment, type_experiment.labs)
grafico <- grafico.OBP_algorithms(data_obc, obp_algorithm, time, type_experiment, type_experiment.labs)
grafico.agrupamiento_algoritmos <- function(datos, agrupamiento, tiempo, tipo_experimento, tipo_experimento.labs) {
grafico <- ggplot(data=datos, mapping = aes(x = agrupamiento, y=log10(tiempo), fill=tipo_experimento)) +
stat_boxplot(geom ='errorbar', width = 0.6) +
geom_boxplot(width = 0.8) +
facet_grid(~tipo_experimento, labeller = labeller(type_experiment = tipo_experimento.labs)) +
scale_y_continuous(breaks = seq(0, to=10000, by=1000)) +
theme_bw() +
xlab("Heurísticas de Agrupamiento de Pedidos") +
ylab("Tiempos de ejecución (ns)") +
theme(legend.position="none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.x = element_text(size = 14, colour = "black"),
axis.title.y = element_text(size = 14, colour = "black"),
axis.line = element_line(colour = "black"))
return (grafico)
}
source("Scripts/funciones.R")
grafico <- grafico.OBP_algorithms(data_obc, data_obc$obp_algorithm, data_obc$time, data_obc$type_experiment, type_experiment.labs)
source("Scripts/funciones.R")
grafico <- grafico.OBP_algorithms(data_obc, obp_algorithm, time, type_experiment, type_experiment.labs)
library(readr)
library(tidyverse)
library(magrittr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(nortest)
library(car)
library(DescTools)
library(WRS2)
data_obc = read_csv("Data/obc/dataset.csv")
data_r_ls = read_csv("Data/r_ls/dataset.csv")
data_obc_ls = read_csv("Data/obc_ls/dataset.csv")
obp_algorithms <- c("SOP", "RANDOM", "FCFS", "G01", "G02", "G03")
prp_algorithms <- c("LGAP", "SSHAPE")
ls_algorithms <- c("LS_1x0", "LS_1x1", "LS_1x2", "LS_2x2")
orders <- c('20', '30', '40', '50', '60', '70', '80', '90', '100')
capacity <- c('30', '45', '60', '75')
experiments <- c('WITH_ENCAPSULATION', 'WITHOUT_ENCAPSULATION')
data_obc <- data_obc %>%
mutate(obp_algorithm = parse_factor(as.character(obp_algorithm), levels = obp_algorithms),
prp_algorithm = parse_factor(as.character(prp_algorithm), levels = prp_algorithms),
num_orders = parse_factor(as.character(num_orders), levels = orders),
capacity_device = parse_factor(as.character(capacity_device), levels = capacity),
type_experiment = parse_factor(as.character(type_experiment), levels = experiments)
)
data_r_ls <- data_r_ls %>%
mutate(obp_algorithm = parse_factor(as.character(obp_algorithm), levels = c("RANDOM")),
prp_algorithm = parse_factor(as.character(prp_algorithm), levels = prp_algorithms),
ls_algorithm = parse_factor(as.character(ls_algorithm), levels = ls_algorithms),
num_orders = parse_factor(as.character(num_orders), levels = orders),
capacity_device = parse_factor(as.character(capacity_device), levels = capacity),
type_experiment = parse_factor(as.character(type_experiment), levels = experiments)
)
data_obc_ls <- data_obc_ls %>%
mutate(obp_algorithm = parse_factor(as.character(obp_algorithm), levels = c("G01", "G02", "G03")),
prp_algorithm = parse_factor(as.character(prp_algorithm), levels = prp_algorithms),
ls_algorithm = parse_factor(as.character(ls_algorithm), levels = ls_algorithms),
num_orders = parse_factor(as.character(num_orders), levels = orders),
capacity_device = parse_factor(as.character(capacity_device), levels = capacity),
type_experiment = parse_factor(as.character(type_experiment), levels = experiments)
)
type_experiment.labs <- c('Con Encapsulamiento', 'Sin Encapsulamiento')
names(type_experiment.labs) <- c('WITH_ENCAPSULATION', 'WITHOUT_ENCAPSULATION')
source("Scripts/funciones.R")
grafico <- grafico.OBP_algorithms(data_obc, obp_algorithm, time, type_experiment, type_experiment.labs)
source("Scripts/funciones.R")
grafico <- grafico.agrupamiento_algoritmos(data_obc, obp_algorithm, time, type_experiment, type_experiment.labs)
ggsave("grafico.OBP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.agrupamiento_algoritmos(data_obc, obp_algorithm, time, type_experiment, type_experiment.labs)
grafico
ggsave("grafico.OBP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
source("Scripts/funciones.R")
grafico <- grafico.agrupamiento_algoritmos(data_obc, obp_algorithm, time, type_experiment, type_experiment.labs)
ggsave("grafico.OBP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.LS_algorithms(data_r_ls, obp_algorithm, time, type_experiment, type_experiment.labs)
source("Scripts/funciones.R")
grafico <- grafico.LS_algorithms(data_r_ls, obp_algorithm, time, type_experiment, type_experiment.labs)
ggsave("grafico.R_LS_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.PRP_algorithms(data_r_ls, prp_algorithms, time, type_experiment, type_experiment.labs)
ggsave("grafico.R_LS_PRP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.OBP_densidad(data_r_ls)
ggsave("grafico.R_LS_densidad.png", grafico, units="in", width=10, height=5, dpi=1200)
# Verificación del supuesto de Normalidad
lillie.test(data_r_ls$time)
# Supuesto de Homocedastecidad
bartlett.test(data=data_r_ls, time ~ type_experiment)
# Prueba ANOVA Robusta
t1way(time ~ type_experiment, data = data_r_ls)
lincon(time ~ type_experiment, data = data_r_ls)
data_r_ls <- as_tibble(data_r_ls)
data_r_ls_ce <- data_r_ls %>% filter(type_experiment == 'WITH_ENCAPSULATION') %>% select(time)
data_r_ls_se <- data_r_ls %>% filter(type_experiment == 'WITHOUT_ENCAPSULATION') %>% select(time)
yuend(data_r_ls_ce, data_r_ls_se)
grafico <- grafico.LS_algorithms(data_r_ls, ls_algorithms, time, type_experiment, type_experiment.labs)
ggsave("grafico.R_LS_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.PRP_algorithms(data_r_ls, prp_algorithms, time, type_experiment, type_experiment.labs)
ggsave("grafico.R_LS_PRP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.OBP_densidad(data_r_ls)
ggsave("grafico.R_LS_densidad.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.LS_algorithms(data_obc_ls, ls_algorithm, time, type_experiment, type_experiment.labs)
ggsave("grafico.OBC_LS_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.PRP_algorithms(data_obc_ls, prp_algorithms, time, type_experiment, type_experiment.labs)
ggsave("grafico.OBC_LS_PRP_algorithms.png", grafico, units="in", width=10, height=5, dpi=1200)
grafico <- grafico.OBP_densidad(data_obc_ls)
ggsave("grafico.OBC_LS_densidad.png", grafico, units="in", width=10, height=5, dpi=1200)
# Verificación del supuesto de Normalidad
lillie.test(data_obc_ls$time)
# Supuesto de Homocedastecidad
bartlett.test(data=data_obc_ls, time ~ type_experiment)
# Prueba ANOVA Robusta
t1way(time ~ type_experiment, data = data_obc_ls)
lincon(time ~ type_experiment, data = data_obc_ls)
data_obc_ls <- as_tibble(data_obc_ls)
data_obc_ls_ce <- data_obc_ls %>% filter(type_experiment == 'WITH_ENCAPSULATION') %>% select(time)
data_obc_ls_se <- data_obc_ls %>% filter(type_experiment == 'WITHOUT_ENCAPSULATION') %>% select(time)
yuend(data_obc_ls_ce, data_obc_ls_se)
yuend(data_obc_ce, data_obc_se)
yuend(data_r_ls_ce, data_r_ls_se)
yuend(data_obc_ls_ce, data_obc_ls_se)
grafico <- grafico.OBP_algorithms(data_obc, obp_algorithm, time, type_experiment, type_experiment.labs)
view(grafico)
glimpse(data_obc)
library(readr)
library(tidyverse)
library(magrittr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(nortest)
library(car)
library(DescTools)
library(WRS2)
glimpse(data_obc)
summary(data_obc)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
list(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
)
)
library(modeest)
install.packages("modeest")
install.packages("modeest")
library(modeest)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = huber(., k=1.5, tol=1e-06)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = huber(., k=1.5, tol=1e-06)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., k=1.5, tol=1e-06)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., k=1.5, na.rm = FALSE)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., k=1.5, na.rm = FALSE, conf.level = 0.95)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., k=1.5, na.rm = FALSE, conf.level = 0.95)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., k=1.5, na.rm = FALSE, conf.level = 0.95)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., k=1.5, na.rm = FALSE, conf.level = 0.95)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., na.rm = FALSE, conf.level = 0.95)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., na.rm = FALSE, conf.level = 0.95)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., conf.level = 0.95)
)
)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., conf.level = 0.95)
)
) %>%
View()
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = HuberM(., tol=1e-06, conf.level = 0.95)
)
) %>%
View()
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA_10% = mean(., na.rm=TRUE, trim=0.05)
)
) %>%
View()
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA_10 = mean(., na.rm=TRUE, trim=0.05)
)
) %>%
View()
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = MASS::huber(., conf.level = 0.95)
)
) %>%
View()
install.packages("MASS")
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = MASS::huber(., conf.level = 0.95)
)
) %>%
View()
library(readr)
library(tidyverse)
library(magrittr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(nortest)
library(car)
library(DescTools)
library(WRS2)
library(modeest)
library(MASS)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = MASS::huber(., conf.level = 0.95)
)
) %>%
View()
data_obc <- as_tibble(data_obc)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = MASS::huber(., conf.level = 0.95)
)
) %>%
View()
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = MASS::huber(.)
)
) %>%
View()
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = MASS::huber(., k = 1.5, tol = 1e-06)
)
) %>%
View()
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = MASS::huber(., k = 1.5, tol = 1e-06),
VARIANZA = var(., na.rm=TRUE)
)
) %>%
View()
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = MASS::huber(., k = 1.5, tol = 1e-06),
VARIANZA = var(., na.rm=TRUE),
DESVIACION_ESTANDAR = sd(., na.rm=TRUE)
)
) %>%
View()
data_r_ls <- as_tibble(data_r_ls)
data_r_ls %>%
group_by(type_experiment, ls_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = MASS::huber(., k = 1.5, tol = 1e-06),
VARIANZA = var(., na.rm=TRUE),
DESVIACION_ESTANDAR = sd(., na.rm=TRUE)
)
) %>%
View()
data_obc_ls <- as_tibble(data_obc_ls)
data_obc_ls %>%
group_by(type_experiment, ls_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
MEDIA_ROBUSTA = MASS::huber(., k = 1.5, tol = 1e-06),
VARIANZA = var(., na.rm=TRUE),
DESVIACION_ESTANDAR = sd(., na.rm=TRUE)
)
) %>%
View()
data_obc <- as_tibble(data_obc)
data_obc %>%
group_by(type_experiment, obp_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
VARIANZA = var(., na.rm=TRUE)
)
) %>%
View()
save.image("/media/omarjcm/FAE05C7CE05C4155/PRODUCCION_CIENTIFICA/2021/POO/POO/medidas_obc.RData")
data_r_ls %>%
group_by(type_experiment, ls_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
VARIANZA = var(., na.rm=TRUE)
)
) %>%
View()
data_obc_ls %>%
group_by(type_experiment, ls_algorithm) %>%
summarise_at(
vars(time),
funs(
MEDIA = mean(., na.rm=TRUE),
MEDIA_ACOTADA = mean(., na.rm=TRUE, trim=0.05),
VARIANZA = var(., na.rm=TRUE)
)
) %>%
View()
